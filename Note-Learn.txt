Note-Learn.txt
一、姓名和邮箱
$ git config --global user.name
Atra
$ git config --global user.email
atraa0621@gmail.com

二、命令
$ cd /d/Download //切换路径
$ ls //列出当前目录下的文件夹和目录
$ pwd //显示当前目录
$ ls -ah //查看隐藏的目录

$ git status //查看仓库状态
$ git diff //查看修改
$ git log //查看历史记录
$ git log --pretty=oneline //简化历史记录

$ git checkout //切换到里一个分支

三、创建版本库
$ mkdir learn-git //创建一个新目录
$ cd learn-git //进入目录

$ git init //将该目录变成GIT管理的仓库

$ git add Note-Learn.txt //把该文件添加到仓库
$ git commit -m "Note_01_init" //将文件提交到仓库

四、时光穿梭机
$ git reset --hard HEAD^ //回到上一个版本
$ git reset --hard 0d1792 //回到0d1792版本

$ git reflog //显示每一次命令

$ git checkout -- Note-Learn.txt //把工作区的修改撤回
$ git reset HEAD <Note-Learn.txt> //把暂存区的修改撤回，放回工作区

五、Git的工作区和暂存区的概念
1、learn-git是工作区
2、隐藏目录.git是Git的版本库
    其中stage（index）叫暂存区

六、Git管理的是修改，而不是文件
    然后就没有然后了

七、连接gitHub
$ git remote add origin git@github.com:Tra321/learn-git.git //关联一个远程库
$ git push -u origin master //推送master分支的所有内容

八、从远程克隆库
1、先在GitHub上创建一个新的仓库
2、用git clone克隆一个本地库
    $ git clone git@github.com:Tra321/gitskills.git //克隆一个本地库

九、分支管理
$ git checkout -b dev //创建并且切换到dev分支
$ git switch -c dev 
$ git switch master //切换到已有的分支

$ git branch //查看当前分支

$ git add Note-Learn.txt
$ git commit -m "branch test" //在分支dev上提交

$ git merge dev //合并dev中到master分支上
$ git branch -d dev //删除dev

解决冲突就是先冲突再解决